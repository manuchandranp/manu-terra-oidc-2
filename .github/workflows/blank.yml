jobs:
  publish-module:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Fetch OIDC Token
        id: fetch_oidc_token
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ env.JF_URL }}
        with:
          oidc-provider-name: ${{ env.OIDC_PROVIDER }}
          oidc-audience: ${{ env.OIDC_AUDIENCE }}
      - name: Get ID Token
        id: get_id_token
        run: |
          ID_TOKEN=$(curl -sLS -H "User-Agent: actions/oidc-client" -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=github" | jq .value | tr -d '"')
          echo "ID_TOKEN=${ID_TOKEN}" >> $GITHUB_ENV
      - name: Exchange token with access
        id: exchange_token
        env:
          ID_TOKEN: ${{ env.ID_TOKEN }}
          JFROG_PLATFORM_URL: ${{ env.JFROG_URL }}
        run: |
          ACCESS_TOKEN=$(curl -XPOST -H "Content-Type: application/json" "https://hts2.jfrog.io/access/api/v1/oidc/token" -d "{\"grant_type\": \"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\", \"subject_token\": \"${ID_TOKEN}\", \"provider_name\": \"manu-new\"}" | jq .access_token | tr -d '"')
          echo "::set-output name=ACCESS_TOKEN::${ACCESS_TOKEN}"
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        with:
          ACCESS_TOKEN: ${{ steps.exchange_token.outputs.ACCESS_TOKEN }}
          url: ${{ env.JFROG_URL }}
      - name: Configure JFrog CLI for Terraform
        run: |
          jf terraform-config \
            --repo ${{ env.MODULE_REPO_KEY }} \
            --namespace ${{ env.MODULE_NAMESPACE }} \
            --provider ${{ env.MODULE_PROVIDER }} \
            --module ${{ env.MODULE_NAME }}
      - name: Get Tag Version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: Publish Terraform Module
        run: |
          jf tf p \
            --repo ${{ env.MODULE_REPO_KEY }} \
            --namespace ${{ env.MODULE_NAMESPACE }} \
            --provider ${{ env.MODULE_PROVIDER }} \
            --tag v${{ steps.get_version.outputs.VERSION }} \
            --module ${{ env.MODULE_NAME }}
